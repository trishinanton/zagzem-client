{"version":3,"sources":["components/Icons/icons.svg","components/Icons/Icons.js","components/Icons/index.js","components/IconButton.js","components/StyledInput.js","components/InputPhone.js","components/IndicatorDots.js","components/ReviewCard.js","components/TargetForm.js","components/MyMap.jsx","components/CarouselButtons.js","components/CallbackPlanForm.js","img/images/villaLabel.png","components/Page.js","components/SimilarVillages.js","pages/village/index.js"],"names":["Icons","name","color","size","fill","width","height","xlinkHref","IconsSVG","useStyles","makeStyles","theme","root","props","position","margin","padding","borderRadius","cursor","icon","display","alignItems","justifyContent","left","background","selected","filter","transition","txt","top","IconButton","value","iconName","tooltip","classes","className","onClick","handler","breakpoints","up","input","border","outline","label","textTransform","StyledInput","type","placeholder","onChange","InputPhone","state","this","Fragment","defaultCountry","setValue","style","marginTop","React","Component","Dot","backgroundColor","opacity","transitionDuration","IndicatorDots","wrapperStyle","zIndex","bottom","textAlign","total","Array","apply","map","x","i","index","flexDirection","boxShadow","img","cardContent","flexGrow","cardSubHeader","cardPrice","infoBlock","infoIcon","infoValue","ItemInfo","ReviewCard","useContext","AppState","uid","bgs","uname","road","fromMkad","price","leftLands","communications","priceLands","sideOfMkad","permittedUse","slides","length","push","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","kk","infoList","Object","keys","key","loop","auto","widgets","to","container","direction","body","bodyForm","btnTarget","bodyText","Transition","forwardRef","ref","Slide","TargetForm","selectedVillage","useState","phone","setPhone","setName","email","setEmail","sending","setSending","Dialog","open","fullWidth","maxWidth","TransitionComponent","onClose","Grid","item","xs","md","e","target","val","console","log","isValidPhoneNumber","parsePhoneNumber","sendMessageAmoCRM","then","res","catch","test","alert","MyMap","centerMap","defaultState","center","zoom","zoomControl","controls","options","float","right","defaultGeometry","styles","wrapper","btn","userSelect","font","CarouselButtons","prevBtnStyle","assign","nextBtnStyle","prevHandler","nextHandler","fontFamily","fontSize","lineHeight","textarea","CallbackPlanForm","village","Typography","align","Box","my","mx","sendPlanAmoCRM","finally","header","subInfo","btns","descrBlock","descrImg","testImage","targetBlock","mapSection","minHeight","overflow","infoMapBlock","wrapperInfo","marginLeft","mapInfo","descrSection","genplan","plan","ItemMapInfo","Page","showGenplan","setShowGenplan","showSendPlan","setShowSendPlan","waysToGetList","nature","infrastructure","waysToGet","descr","coords","safety","roadIn","roadTo","infoCoords","infoDescr","textDescr","nn","rr","ww","infoListInfrastructure","infoListNature","infoListRoad","infoListSafety","nearSettlementName","nearSettlementDist","nearTownName","nearTownDist","nearRailwayName","nearRailwayDist","nearSettlement","distance","nearTown","nearRailway","rosreestrLink","rosreestr","Container","totalLands","area","href","fontWeight","window","spacing","id","SimilarVillages","filteredVillages","el","newArr","sm","VillagePage","scrollTo","location","pathname","substr","villages","context","m","contextType"],"mappings":"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","file":"static/js/11.435d2d8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons.851c0213.svg\";","import React from 'react'\nimport IconsSVG from './icons.svg'\n\nfunction Icons({name, color, size}) {\n\n  return(\n    <svg\n      fill={color}\n      width={size}\n      height={size}\n    >\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\n    </svg>\n  )\n}\n\nexport default Icons\n","import Icons from './Icons'\n\nexport default Icons\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Icons from './Icons'\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n    position: 'relative',\n    width: props.size === 'small' ? '50px' : \"calc(100% - 20px)\",\n    height: '55px',\n    margin: '5px',\n    padding: '5px 0px',\n    borderRadius: '1000px',\n    cursor: 'pointer',\n  })),\n  icon: (props => ({\n    position: 'absolute',\n    width:  '45px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    left: '5px',\n    borderRadius: '50px',\n    background: props.selected ? props.color : '#e5eaeb', \n    filter: props.selected ? `brightness(1.1) ` : 'none',\n    transition: \"all 1s ease-out 0.5s\"\n  })),\n  txt: (props => ({\n    position: 'absolute',\n    top: '0',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    left: '70px', \n    color: props.selected ? '#000' : '#919fa3'\n  })),\n}))\n\nfunction IconButton(props) {\n  const value = props.value\n  const iconName = props.iconName\n  const color = props.color\n  const selected = props.selected\n  const size = props.size || 'default'\n  const tooltip = props.tooltip\n\n  const classes = useStyles({ color, selected, size })\n\n  if (size === 'small') {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div tooltip={tooltip} className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={24}\n          />\n        </div>\n      </div>\n    ) \n  } else {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={size === 'small' ? 15 : 24}\n          />\n        </div>\n        <div className={classes.txt}>\n          <h5>{value}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconButton;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    position: 'relative',\n    padding: '15px 0px 0px 0px',\n    [theme.breakpoints.up('md')]: {\n      // width: '365px'\n    },\n\n  }),\n  input: props => ({\n    background: '#f9f9f9',\n    color: '#191a1d',\n    transition: 'border-color ease .3s',\n    cursor: 'pointer',\n    borderRadius: '1000px',\n    border: '2px solid #e2e2e2',\n    width: '100%',\n    padding: '15px 20px',\n    outline: '0',\n    '&:hover': {\n      border: '2px solid rgba(158,209,91,1)',\n    },\n  }),\n  label: {\n    padding: '10px',\n    color: '#919191',\n    width: '100%',\n    textTransform: 'uppercase',\n  }\n}))\n\nconst StyledInput = (props) => {\n\n  const handler = props.handler\n  const type = props.type\n  const placeholder = props.placeholder\n  const value = props.value\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      <input\n        type={type}\n        className={classes.input}\n        onChange={handler}\n        placeholder={placeholder}\n        value={value}\n      />\n    </div>\n  )\n}\n\nexport default StyledInput\n","import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n  return (\n    <span style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <div\n        key={'bgil'+i}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          backgroundImage: `url(${bgs[i]})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      />\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road} шоссе`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${priceLands[0]} р. ${permittedUse === 1 ? '(ИЖС)' : '(Дача)'}`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","import React, {Component} from 'react'\nimport {YMaps, Map, Placemark, ZoomControl} from 'react-yandex-maps'\nimport PropTypes from 'prop-types'\n\nclass MyMap extends Component {\n    static propTypes = {\n        centerMap: PropTypes.array\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let centerMap = this.props.centerMap || [55.75, 37.57]\n        return (\n            <YMaps>\n                <Map\n                    defaultState={{\n                        center: centerMap,\n                        zoom: 9,\n                        // behaviors: [\"disable('scrollZoom')\"],\n                        zoomControl: true,\n                        controls: [],\n                        options: {\n                            size: \"small\"\n                        }\n                    }}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <ZoomControl options={{ float: 'right' , size: \"small\", position:{right:40, top: 200}}} />\n                    <Placemark\n                        defaultGeometry={centerMap}\n                    />\n                </Map>\n            </YMaps>\n        )\n    }\n}\n\nexport {MyMap}\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst styles = {\n  wrapper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '50%',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '30px',\n    height: '30px',\n    cursor: 'pointer',\n    userSelect: 'none',\n    position: 'absolute',\n    bottom: '0',\n    font: '16px/30px sans-serif',\n    color: 'rgba(255,255,255,0.8)',\n    zIndex: '200'\n  },\n  left: {\n    left: '0'\n  },\n  right: {\n    right: '0'\n  }\n}\n\nexport default function CarouselButtons (props) {\n  const prevBtnStyle = Object.assign({}, styles.btn, styles.left)\n  const nextBtnStyle = Object.assign({}, styles.btn, styles.right)\n  const { index, total, loop, prevHandler, nextHandler } = props\n  return (\n    <div style={styles.wrapper}>\n      { (loop || index !== 0) && (\n        <div style={prevBtnStyle} onClick={prevHandler}>◀</div>\n      )}\n      { (loop || index !== total - 1) && (\n        <div style={nextBtnStyle} onClick={nextHandler}>▶</div>\n      )}\n    </div>\n  )\n}\n\nCarouselButtons.propTypes = {\n  index: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  prevHandler: propTypes.func,\n  nextHandler: propTypes.func\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","export default __webpack_public_path__ + \"static/media/villaLabel.00373197.png\";","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    transition: 'all 0.3s ease-out',\n\n  },\n  header: {\n    width: '100%',\n    margin: '0 0px 40px 0px',\n  },\n  subInfo: {\n    width: '100%',\n    margin: '30px 0px 15px 0px',\n    padding: '5px',\n    borderRadius: '15px',\n  },\n  btns: {\n    margin: '30px 0px 30px 0px',\n  },\n  descrBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },\n  descrImg: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${testImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain'\n  },\n  targetBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },  \n  mapSection: {\n    position:'relative',\n    margin: '30px 0px 30px 0px',\n    background: '#fff',\n    borderRadius: '15px',\n    minHeight: '780px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('md')]: {\n      minHeight: '460px',\n    },\n  },\n  btn: (props => ({\n    background: '#FFF',\n    color: '#0197fd',\n    transition: 'all ease .45s',\n    cursor: 'pointer',\n    borderRadius: '15px',\n    boxShadow: 'inset 0 0 0 1px #0197fd',\n    padding: '20px 20px',\n    margin: '5px 15px',\n    textAlign: 'center',\n    '&:hover': { \n      background: '#0197fd',\n      color: '#fff',\n    },\n  })),\n  infoMapBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    margin: '0px 0px 30px 10px',\n  },\n  infoBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    background: '#fff',\n    borderRadius: '15px',\n    margin: '5px',\n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '10px',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '60px',\n    top: '0',\n    width: 'calc(100% - 70px)',\n    height: '100%',\n  },\n  wrapperInfo: {\n    marginLeft: '0px',\n    borderRadius: '15px',\n    background: '#fff',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '15px',\n    }\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n  },\n  descrSection: {\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    minHeight: '300px',\n    background: '#fff',\n    borderRadius: '15px',\n    padding: '40px 25px',\n  },\n  genplan: (props=>({\n    position: 'relative',\n    width: '100%',\n    height: '95vh',\n    background: `url(${props.plan})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  }))\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}}>{name}</h5>\n      <h4 style={{margin:'0'}}>{value}</h4>\n    </div>\n  )\n}\n\nexport default function Page (props){\n  const village = props.village\n  const [showGenplan, setShowGenplan] = React.useState(false)\n  const [showSendPlan, setShowSendPlan] = React.useState(false)\n\n  const waysToGetList = []\n  const communications = village.communications\n  const nature = village.nature\n  const infrastructure = village.infrastructure\n  const waysToGet = village.waysToGet\n  const descr = village.descr\n  const coords = village.coords || [0,0]\n  const bgs = village.bgs\n  const plan = village.plan\n  const safety = village.safety\n  const roadIn = village.roadIn\n  const roadTo = village.roadTo\n\n  const classes = useStyles({ plan })\n\n  let infoCoords = []\n  if (coords) {\n    infoCoords = coords\n  }\n\n  const infoDescr = []\n  if (descr) {\n    for (let i=0;i<descr.length;i++) {\n      infoDescr.push(\n        <p key={'dscr'+i} className={classes.textDescr}>\n          {descr[i]}\n        </p>\n      )\n    }\n  }\n\n  let kk = []\n  let nn = []\n  let rr = []\n  let ww = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n  if (nature) {\n    nn = Object.keys(nature)\n  }\n  if (infrastructure) {\n    rr = Object.keys(infrastructure)\n  }\n  if (waysToGet) {\n    ww = Object.keys(waysToGet)\n  }\n\n  for (let i=0;i<ww.length;i++) {\n    const key = ww[i]\n    const value = waysToGet[key] || ''\n    if (key === '1') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='car'\n            color='#0197fd'\n            selected={true}\n            value={'На автомобиле: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '2') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='bus'\n            color='#8a6eac'\n            selected={true}\n            value={'На автобусе: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '3') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='train'\n            color='#06b26b'\n            selected={true}\n            value={'На электричке: ' + value}\n          />\n        </Grid>\n      )\n    }\n  }\n   \n  const infoList = []\n  const infoListInfrastructure = []\n  const infoListNature = []\n  const infoListRoad = []\n  const infoListSafety = []\n\n  infoList.push(\n    <IconButton\n      key='cSXmmn'\n      iconName='mapPlace'\n      color='#0197fd'\n      selected={true}\n      value={village.permittedUse === 1 ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n    />\n  )\n\n  if (roadTo === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphalt'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        handler={()=>{}}\n        value='До поселка асфальтированная дорога'\n      />\n    )\n  }\n  if (roadTo === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphaltKroshka'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='До поселка дорога из асф.крошки'\n      />\n    )\n  }\n  if (roadTo === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_betonPlit'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='До поселка дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadTo === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='До поселка дорога из битого кирпича'\n      />\n    )\n  }\n  if (roadTo === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='До поселка грунтовая дорога'\n      />\n    )\n  }\n  if (roadTo === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='До поселка дорога из щебня'\n      />\n    )\n  }\n\n  if (roadIn === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_1'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        value='В поселке асфальтированная дорога'\n      />\n    )\n  }\n  if (roadIn === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_3'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='В поселке дорога из асф. крошки'\n      />\n    )\n  }\n  if (roadIn === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_6'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='В поселке дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadIn === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='В поселке дорога из битого кирпича'\n      />\n    )\n  } \n  if (roadIn === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='В поселке грунтовая дорога'\n      />\n    )\n  }\n  if (roadIn === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='В поселке дорога из щебня'\n      />\n    )\n  }\n\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || '' \n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={'Электричество '+value}\n        />\n      )\n    } \n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='canalization'\n          color='#ff9e5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  for (let i=0;i<rr.length;i++) {\n    const key = rr[i]\n    const value = infrastructure[key] || ''\n    if (key === '1') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='cart'\n          color='#8a6eac'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='school'\n          color='#f7173a'\n          selected={true}\n          handler={()=>{}}\n          value={'Школа в '+value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='detsad'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={'Детский сад в '+value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='hospital'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={'Больница в '+value}\n        />\n      )\n    }\n  }\n\n  if (safety) {\n    for (let i=0;i<safety.length;i++) {\n      const key = safety[i]\n      if (key === '1') {\n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='zabor'\n            color='#6aa3a5'\n            selected={true}\n            handler={()=>{}}\n            value='Поселок огорожен'\n          />\n        )\n      }\n      if (key === '2') {   \n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='security'\n            color='#ff5b5a'\n            selected={true}\n            handler={()=>{}}\n            value='Есть охрана'\n          />\n        )\n      }\n    }\n  }\n\n  for (let i=0;i<nn.length;i++) {\n    const key = nn[i]\n    const value = nature[key] || ''\n    if (key === '1') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='vodoem'\n          color='#5277f5'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '2') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={'Лес '+value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={`Пляж`}\n        />\n      )\n    }\n  }\n\n  let nearSettlementName = ''\n  let nearSettlementDist = ''\n  let nearTownName = ''\n  let nearTownDist = ''\n  let nearRailwayName = ''\n  let nearRailwayDist = ''\n  if (village.nearSettlement) {\n    nearSettlementName = village.nearSettlement.name\n    nearSettlementDist = village.nearSettlement.distance\n  }\n  if (village.nearTown) {\n    nearTownName = village.nearTown.name\n    nearTownDist = village.nearTown.distance\n  }\n  if (village.nearRailway) {\n    nearRailwayName = village.nearRailway.name\n    nearRailwayDist = village.nearRailway.distance\n  }\n\n  let rosreestrLink = ''\n  if (village.rosreestr) {\n    rosreestrLink = village.rosreestr \n  }\n\n  const slides = []\n\n  if (bgs){\n    for (let i=0;i<bgs.length;i++) {\n      slides.push(\n        <div\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n          }}\n        />\n      )\n    }\n  }\n\n  return (\n    <>\n\n      <Container maxWidth='lg'>\n        <div className={classes.header}>\n          <Grid container alignItems='center'>\n            <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n          </Grid>\n          <Grid container alignItems='center'>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n              <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n              <h4 style={{padding:'10px 0'}}>{village.road} шоссе</h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n              <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{village.price}</span> руб/сотка</h4>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container>\n          <Grid item xs={12} md={8}>\n            <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n              <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                {slides}\n              </Carousel>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.wrapperInfo}>\n              {infoList}\n            </div>\n            <div style={{margin:'30px 15px'}}>\n              <center>\n\n                <a href='#target-block'>\n                  <button className='main-button'>\n                    Записаться на просмотр\n                  </button>\n                </a>\n\n              </center>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.btns}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>setShowGenplan(true)}\n              >\n                Планировка поселка\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>{window.open(rosreestrLink, '_blank')}}\n              >\n                Кадастровая карта\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                 onClick={()=>setShowSendPlan(true)}\n               >\n                Отправить планировку на email\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container spacing={3}> \n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Дороги</h4>\n              {infoListRoad}\n            </div>\n          </Grid>\n          {infoListSafety.length < 1 ? '' :\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Безопасность</h4>\n              {infoListSafety}\n            </div>\n          </Grid>\n          }\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Природа</h4>\n              {infoListNature}\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n              {infoListInfrastructure}\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.descrBlock}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n            </Grid>\n            <Grid item xs={12} md={5}>\n              <div className={classes.descrImg} />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <div className={classes.descrSection}>\n                {infoDescr}\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n        <div className={classes.mapSection}>\n          <Grid container>\n            <MyMap\n              centerMap={infoCoords}\n            />\n            <Grid item xs={12} md={4}>\n              <div className={classes.mapInfo}>\n                <ItemMapInfo\n                  name='Ближайший населенный пункт'\n                  value={nearSettlementName + ' - ' + nearSettlementDist}\n                />        \n                <ItemMapInfo\n                  name='Ближайший город'\n                  value={nearTownName + ' - ' + nearTownDist}\n                />\n                <ItemMapInfo\n                  name='Ближайшая ж/д станция'\n                  value={nearRailwayName + ' - ' + nearRailwayDist}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    \n      <Container maxWidth='lg'>\n        <div className={classes.subInfo}>\n          <Grid container justifyContent='space-around'>\n            {waysToGetList}\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div id='target-block' className={classes.targetBlock}>\n          <TargetForm selectedVillage={village.name} />\n        </div>\n      </Container>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='xl'\n        open={showGenplan}\n        onClose={()=>setShowGenplan(false)}\n      >\n        <div className={classes.genplan} />\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={showSendPlan}\n        onClose={()=>setShowSendPlan(false)}\n      > \n        <CallbackPlanForm village={village.name}/>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst SimilarVillages = ({uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price <= price)\n  const newArr = []  \n\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        > \n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} >\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","import React from 'react'\nimport AppState from '../../AppState'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Page from '../../components/Page'\nimport SimilarVillages from '../../components/SimilarVillages'\n\nclass VillagePage extends React.Component {\n  static contextType = AppState\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    const path = this.props.location.pathname\n    const uname = path.substr(9)\n    let village = []\n\n    const villages = this.context.villages\n    for (let i=0;i<villages.length;i++) {\n      if (villages[i].uname === uname) {\n        village = villages[i]\n      }\n    }\n    this.context.selectedVillage = village.name\n    return (\n      <>\n        <Page village={village} />\n        <Container maxWidth='lg'\n          style={{\n            padding: '15px 0'\n          }}\n        >\n          {/*<h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>*/}\n          <Box m={2}>\n            <SimilarVillages uid={village.uid} road={village.road} price={village.price}/>\n          </Box>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default VillagePage\n"],"sourceRoot":""}