{"version":3,"sources":["components/StyledInput.js","components/InputPhone.js","components/Icons/icons.svg","components/Icons/Icons.js","components/Icons/index.js","components/IconButton.js","components/CallbackFormPopUp.js","components/IndicatorDots.js","components/ReviewCard.js","components/TargetForm.js","components/MyMap.jsx","components/CarouselButtons.js","components/CallbackPlanForm.js","img/images/villaLabel.png","components/Page.js","components/SimilarVillages.js","pages/village/index.js"],"names":["useStyles","makeStyles","theme","root","props","position","padding","breakpoints","up","input","background","color","transition","cursor","borderRadius","border","width","outline","label","textTransform","StyledInput","handler","type","placeholder","value","classes","className","onChange","InputPhone","state","this","Fragment","defaultCountry","setValue","style","marginTop","height","React","Component","Icons","name","size","fill","xlinkHref","IconsSVG","margin","icon","display","alignItems","justifyContent","left","selected","filter","txt","top","IconButton","iconName","tooltip","onClick","body","bodyForm","btnTarget","bodyText","fontFamily","fontSize","lineHeight","textarea","formContainer","flexDirection","CallbackFormPopUp","useState","phone","setPhone","setName","email","setEmail","sending","setSending","container","align","item","xs","my","mx","e","target","val","console","log","x","test","isValidPhoneNumber","parsePhoneNumber","sendMessageAmoCRM","then","res","catch","alert","submit","Dot","backgroundColor","opacity","transitionDuration","IndicatorDots","wrapperStyle","zIndex","bottom","textAlign","total","Array","apply","map","i","index","boxShadow","img","cardContent","flexGrow","cardSubHeader","cardPrice","infoBlock","infoIcon","infoValue","ItemInfo","ReviewCard","useContext","AppState","uid","bgs","uname","road","fromMkad","price","leftLands","communications","priceLands","sideOfMkad","permittedUse","slides","length","push","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","n","kk","infoList","Object","keys","key","loop","auto","widgets","to","join","replace","direction","Transition","forwardRef","ref","Slide","TargetForm","selectedVillage","Dialog","open","fullWidth","maxWidth","TransitionComponent","onClose","Grid","md","MyMap","centerMap","defaultState","center","zoom","zoomControl","controls","options","float","right","scaleLine","defaultGeometry","styles","wrapper","btn","userSelect","font","CarouselButtons","prevBtnStyle","assign","nextBtnStyle","prevHandler","nextHandler","CallbackPlanForm","village","Typography","Box","sendPlanAmoCRM","finally","header","subInfo","btns","descrBlock","descrImg","testImage","targetBlock","mapSection","minHeight","overflow","infoMapBlock","wrapperInfo","marginLeft","mapInfo","descrSection","genplan","plan","ItemMapInfo","Page","showGenplan","setShowGenplan","showSendPlan","setShowSendPlan","showForm","setShowForm","waysToGetList","nature","infrastructure","waysToGet","descr","coords","safety","roadIn","roadTo","infoCoords","infoDescr","textDescr","nn","rr","ww","infoListInfrastructure","infoListNature","infoListRoad","infoListSafety","nearSettlementName","nearSettlementDist","nearTownName","nearTownDist","nearRailwayName","nearRailwayDist","nearSettlement","distance","nearTown","nearRailway","rosreestrLink","rosreestr","useEffect","document","getElementById","innerHTML","children","Container","totalLands","area","fontWeight","window","spacing","id","SimilarVillages","filteredVillages","el","newArr","sm","VillagePage","scrollTo","location","pathname","substr","villages","context","m","contextType"],"mappings":"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","file":"static/js/11.92f5b5a8.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    position: 'relative',\n    padding: '15px 0px 0px 0px',\n    [theme.breakpoints.up('md')]: {\n      // width: '365px'\n    },\n\n  }),\n  input: props => ({\n    background: '#f9f9f9',\n    color: '#191a1d',\n    transition: 'border-color ease .3s',\n    cursor: 'pointer',\n    borderRadius: '1000px',\n    border: '2px solid #e2e2e2',\n    width: '100%',\n    padding: '15px 20px',\n    outline: '0',\n    '&:hover': {\n      border: '2px solid rgba(158,209,91,1)',\n    },\n  }),\n  label: {\n    padding: '10px',\n    color: '#919191',\n    width: '100%',\n    textTransform: 'uppercase',\n  }\n}))\n\nconst StyledInput = (props) => {\n\n  const handler = props.handler\n  const type = props.type\n  const placeholder = props.placeholder\n  const value = props.value\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      <input\n        type={type}\n        className={classes.input}\n        onChange={handler}\n        placeholder={placeholder}\n        value={value}\n      />\n    </div>\n  )\n}\n\nexport default StyledInput\n","import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","export default __webpack_public_path__ + \"static/media/icons.851c0213.svg\";","import React from 'react'\nimport IconsSVG from './icons.svg'\n\nfunction Icons({name, color, size}) {\n\n  return(\n    <svg\n      fill={color}\n      width={size}\n      height={size}\n    >\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\n    </svg>\n  )\n}\n\nexport default Icons\n","import Icons from './Icons'\n\nexport default Icons\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Icons from './Icons'\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n    position: 'relative',\n    width: props.size === 'small' ? '50px' : \"calc(100% - 20px)\",\n    height: '55px',\n    margin: '5px',\n    padding: '5px 0px',\n    borderRadius: '1000px',\n    cursor: 'pointer',\n  })),\n  icon: (props => ({\n    position: 'absolute',\n    width:  '45px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    left: '5px',\n    borderRadius: '50px',\n    background: props.selected ? props.color : '#e5eaeb', \n    filter: props.selected ? `brightness(1.1) ` : 'none',\n    transition: \"all 1s ease-out 0.5s\"\n  })),\n  txt: (props => ({\n    position: 'absolute',\n    top: '0',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    left: '70px', \n    color: props.selected ? '#000' : '#919fa3'\n  })),\n}))\n\nfunction IconButton(props) {\n  const value = props.value\n  const iconName = props.iconName\n  const color = props.color\n  const selected = props.selected\n  const size = props.size || 'default'\n  const tooltip = props.tooltip\n\n  const classes = useStyles({ color, selected, size })\n\n  if (size === 'small') {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div tooltip={tooltip} className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={24}\n          />\n        </div>\n      </div>\n    ) \n  } else {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={size === 'small' ? 15 : 24}\n          />\n        </div>\n        <div className={classes.txt}>\n          <h5>{value}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconButton;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport { isValidPhoneNumber, parsePhoneNumber } from 'react-phone-number-input'\nimport { makeStyles } from '@material-ui/styles'\nimport {sendMessageAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n  })),\n  body: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  bodyForm: {\n    background: '#fff',\n    padding: '15px',\n    borderRadius: '15px',\n  },\n  btnTarget: {\n    margin: '10px 0px 0px 0px',\n  },\n  bodyText: {\n    fontFamily: 'FiraMedium',\n    padding: '15px',\n    fontSize: '2rem',\n    color: '#263238',\n    lineHeight: '110%',\n  },\n  textarea: {\n    width: '100%',\n    borderRadius: '15px',\n    background: '#f9f9f9',\n    color: '#191a1d',\n    cursor: 'pointer',\n    border: '2px solid #e2e2e2',\n    fontFamily: 'FiraLight',\n    fontSize: '1.25rem',\n    marginTop: '15px',\n    outline: '0',\n    padding: '15px'\n  },\n  formContainer: {\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space-around',\n    [theme.breakpoints.up('md')]: {\n      flexDirection:'row',\n    },\n  }\n}))\n\nconst CallbackFormPopUp = (props) => {\n  const [phone, setPhone] = React.useState('')\n  const [name, setName] = React.useState('')\n  const [email, setEmail] = React.useState('')\n  const [sending, setSending] = React.useState(false)\n\n  const classes = useStyles({ })\n\n  const changePhone = val => {\n    console.log('val', val)\n    setPhone(val)\n  }\n\n  const submit = () => {\n\n    console.log('submit, phone', phone)\n\n    const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n    const x = emailRegexp.test(email)\n\n    if(name ) {\n      if(x) {\n        if(isValidPhoneNumber(phone)) {\n          const phoneNumber = parsePhoneNumber(phone)\n          if (phoneNumber) {\n            console.log('submit, phone valid')\n\n            sendMessageAmoCRM(name, phone, email)\n                .then(res => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n                .catch(e => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n          }\n        } else {\n          alert('Введите правильный номер телефона')\n          return\n        }\n      } else {\n        alert('Введите правильный адрес почты')\n        return\n      }\n    } else {\n      alert('Заполните обязательные поля')\n      return\n    }\n\n    console.log('submit, name', name)\n    console.log('submit, email', email)\n\n  }\n\n  if (sending) {\n    return (\n    <div className={classes.root}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Typography align='center' className={classes.bodyText}>\n          Письмо успешно отправлено, менеджер скоро с вами свяжется\n        </Typography>\n      </Grid>\n    </div>\n    )\n  } else {\n    return (\n      <div style={{margin: '15px'}} className={classes.root}>\n        <Grid container>\n          <Grid item xs={12}>\n            <div className={classes.bodyForm}>\n              <Box my={2} mx={4}>\n                <center>\n                  <h3 style={{fontSize:'27px'}}>Оставьте свои данные и мы свяжемся с вами</h3>\n                </center>\n              </Box>\n              {/*<Box className={classes.formContainer} >*/}\n                <StyledInput\n                    placeholder='Как вас зовут? *'\n                    handler={(e)=>setName(e.target.value)}\n                    value={name}\n                    type='text'\n                />\n                <StyledInput\n                    placeholder='Введите ваш email *'\n                    handler={(e)=>setEmail(e.target.value)}\n                    value={email}\n                    type='email'\n                />\n                <InputPhone\n                    value={phone}\n                    setValue={changePhone}\n                />\n                <div className={classes.btnTarget}>\n                  <Grid container justifyContent='center'>\n                    <button className='main-button' style={{margin: '0px'}} onClick={()=>submit()}>\n                      Отправить\n                    </button>\n                  </Grid>\n                </div>\n              {/*</Box>*/}\n\n            </div>\n          </Grid>\n        </Grid> \n      </div>\n    )\n  }\n}\n\nexport default CallbackFormPopUp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n  return (\n    <span style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <div\n        key={'bgil'+i}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          backgroundImage: `url(${bgs[i]})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n        }}\n      />\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road}`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","import React, {Component} from 'react'\nimport {YMaps, Map, Placemark, ZoomControl, TrafficControl, RulerControl, GeolocationControl} from 'react-yandex-maps'\nimport PropTypes from 'prop-types'\n\nclass MyMap extends Component {\n    static propTypes = {\n        centerMap: PropTypes.array\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let centerMap = this.props.centerMap || [55.75, 37.57]\n        return (\n            <YMaps>\n                <Map\n                    defaultState={{\n                        center: centerMap,\n                        zoom: 9,\n                        // behaviors: [\"disable('scrollZoom')\"],\n                        zoomControl: true,\n                        controls: [],\n                        options: {\n                            size: \"small\"\n                        }\n                    }}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <TrafficControl options={{ float: 'right' }} />\n                    <RulerControl options={{ float: 'right' ,position:{right:110, top: 10}, scaleLine: 'false'}} />\n                    <ZoomControl options={{ float: 'right' , size: \"small\", position:{right:10, top: 200}}} />\n                    <GeolocationControl options={{ float: 'right', position: {right:10, bottom: 150} }} />\n                    <Placemark\n                        defaultGeometry={centerMap}\n                    />\n                </Map>\n            </YMaps>\n        )\n    }\n}\n\nexport {MyMap}\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst styles = {\n  wrapper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '50%',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '30px',\n    height: '30px',\n    cursor: 'pointer',\n    userSelect: 'none',\n    position: 'absolute',\n    bottom: '0',\n    font: '16px/30px sans-serif',\n    color: 'rgba(255,255,255,0.8)',\n    zIndex: '200'\n  },\n  left: {\n    left: '0'\n  },\n  right: {\n    right: '0'\n  }\n}\n\nexport default function CarouselButtons (props) {\n  const prevBtnStyle = Object.assign({}, styles.btn, styles.left)\n  const nextBtnStyle = Object.assign({}, styles.btn, styles.right)\n  const { index, total, loop, prevHandler, nextHandler } = props\n  return (\n    <div style={styles.wrapper}>\n      { (loop || index !== 0) && (\n        <div style={prevBtnStyle} onClick={prevHandler}>◀</div>\n      )}\n      { (loop || index !== total - 1) && (\n        <div style={nextBtnStyle} onClick={nextHandler}>▶</div>\n      )}\n    </div>\n  )\n}\n\nCarouselButtons.propTypes = {\n  index: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  prevHandler: propTypes.func,\n  nextHandler: propTypes.func\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","export default __webpack_public_path__ + \"static/media/villaLabel.00373197.png\";","import React, {useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    transition: 'all 0.3s ease-out',\n\n  },\n  header: {\n    width: '100%',\n    margin: '0 0px 40px 0px',\n  },\n  subInfo: {\n    width: '100%',\n    margin: '30px 0px 15px 0px',\n    padding: '5px',\n    borderRadius: '15px',\n  },\n  btns: {\n    margin: '30px 0px 30px 0px',\n  },\n  descrBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },\n  descrImg: {\n    width: '100%',\n    height: '100%',\n    backgroundImage: `url(${testImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain'\n  },\n  targetBlock: {\n    margin: '30px 0px 30px 0px',\n    background: 'none',\n    borderRadius: '15px',\n  },  \n  mapSection: {\n    position:'relative',\n    margin: '30px 0px 30px 0px',\n    background: '#fff',\n    borderRadius: '15px',\n    minHeight: '780px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('md')]: {\n      minHeight: '460px',\n    },\n  },\n  btn: (props => ({\n    background: '#FFF',\n    color: '#0197fd',\n    transition: 'all ease .45s',\n    cursor: 'pointer',\n    borderRadius: '15px',\n    boxShadow: 'inset 0 0 0 1px #0197fd',\n    padding: '20px 20px',\n    margin: '5px 15px',\n    textAlign: 'center',\n    '&:hover': { \n      background: '#0197fd',\n      color: '#fff',\n    },\n  })),\n  infoMapBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    margin: '0px 0px 30px 10px',\n  },\n  infoBlock: {\n    position: 'relative',\n    width: 'calc(100% - 10px)',\n    height: '60px',\n    background: '#fff',\n    borderRadius: '15px',\n    margin: '5px',\n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '10px',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '60px',\n    top: '0',\n    width: 'calc(100% - 70px)',\n    height: '100%',\n  },\n  wrapperInfo: {\n    marginLeft: '0px',\n    borderRadius: '15px',\n    background: '#fff',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '15px',\n    }\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n  },\n  descrSection: {\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    minHeight: '300px',\n    background: '#fff',\n    borderRadius: '15px',\n    padding: '40px 25px',\n  },\n  genplan: (props=>({\n    position: 'relative',\n    width: '100%',\n    height: '95vh',\n    background: `url(${props.plan})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  }))\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}}>{name}</h5>\n      <h4 style={{margin:'0'}}>{value}</h4>\n    </div>\n  )\n}\n\nexport default function Page (props){\n  const village = props.village\n  const [showGenplan, setShowGenplan] = React.useState(false)\n  const [showSendPlan, setShowSendPlan] = React.useState(false)\n  const [showForm, setShowForm] = React.useState(false)\n\n  const waysToGetList = []\n  const communications = village.communications\n  const nature = village.nature\n  const infrastructure = village.infrastructure\n  const waysToGet = village.waysToGet\n  const descr = village.descr\n  const coords = village.coords || [0,0]\n  const bgs = village.bgs\n  const plan = village.plan\n  const safety = village.safety\n  const roadIn = village.roadIn\n  const roadTo = village.roadTo\n\n  const classes = useStyles({ plan })\n\n  let infoCoords = []\n  if (coords) {\n    infoCoords = coords\n  }\n\n  const infoDescr = []\n  if (descr) {\n    for (let i=0;i<descr.length;i++) {\n      infoDescr.push(\n        <p key={'dscr'+i} className={classes.textDescr}>\n          {descr[i]}\n        </p>\n      )\n    }\n  }\n\n  let kk = []\n  let nn = []\n  let rr = []\n  let ww = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n  if (nature) {\n    nn = Object.keys(nature)\n  }\n  if (infrastructure) {\n    rr = Object.keys(infrastructure)\n  }\n  if (waysToGet) {\n    ww = Object.keys(waysToGet)\n  }\n\n  for (let i=0;i<ww.length;i++) {\n    const key = ww[i]\n    const value = waysToGet[key] || ''\n    if (key === '1') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='car'\n            color='#0197fd'\n            selected={true}\n            value={'На автомобиле: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '2') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='bus'\n            color='#8a6eac'\n            selected={true}\n            value={'На автобусе: ' + value}\n          />\n        </Grid>\n      )\n    }\n    if (key === '3') {\n      waysToGetList.push(\n        <Grid key={key+i+'wtg'} item xs={12} md={4}>\n          <IconButton\n            iconName='train'\n            color='#06b26b'\n            selected={true}\n            value={'На электричке: ' + value}\n          />\n        </Grid>\n      )\n    }\n  }\n   \n  const infoList = []\n  const infoListInfrastructure = []\n  const infoListNature = []\n  const infoListRoad = []\n  const infoListSafety = []\n\n  infoList.push(\n    <IconButton\n      key='cSXmmn'\n      iconName='mapPlace'\n      color='#0197fd'\n      selected={true}\n      value={village.permittedUse === 1 ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n    />\n  )\n\n  if (roadTo === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphalt'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        handler={()=>{}}\n        value='До поселка асфальтированная дорога'\n      />\n    )\n  }\n  if (roadTo === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_asphaltKroshka'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='До поселка дорога из асф.крошки'\n      />\n    )\n  }\n  if (roadTo === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_betonPlit'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='До поселка дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadTo === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='До поселка дорога из битого кирпича'\n      />\n    )\n  }\n  if (roadTo === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='До поселка грунтовая дорога'\n      />\n    )\n  }\n  if (roadTo === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_to_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='До поселка дорога из щебня'\n      />\n    )\n  }\n\n  if (roadIn === 1) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_1'\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={true}\n        value='В поселке асфальтированная дорога'\n      />\n    )\n  }\n  if (roadIn === 3) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_3'\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={true}\n        value='В поселке дорога из асф. крошки'\n      />\n    )\n  }\n  if (roadIn === 6) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_6'\n        iconName='betonPlit'\n        color='#ff5b5a'\n        selected={true}\n        value='В поселке дорога из бетонных плит'\n      />\n    )\n  }\n  if (roadIn === 5) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_5'\n        iconName='bitiyKirpich'\n        color='#ffce01'\n        selected={true}\n        value='В поселке дорога из битого кирпича'\n      />\n    )\n  } \n  if (roadIn === 4) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_4'\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={true}\n        value='В поселке грунтовая дорога'\n      />\n    )\n  }\n  if (roadIn === 2) {\n    infoListRoad.push(\n      <IconButton\n        key='road_in_2'\n        iconName='sheben'\n        color='#8a6eac'\n        selected={true}\n        value='В поселке дорога из щебня'\n      />\n    )\n  }\n\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || '' \n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={'Электрофикация '+value}\n        />\n      )\n    } \n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '8') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='canalization'\n          color='#ff9e5a'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  for (let i=0;i<rr.length;i++) {\n    const key = rr[i]\n    const value = infrastructure[key] || ''\n    if (key === '1') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='cart'\n          color='#8a6eac'\n          selected={true}\n          handler={()=>{}}\n          value={'Продукты в '+value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='school'\n          color='#f7173a'\n          selected={true}\n          handler={()=>{}}\n          value={'Школа в '+value}\n        />\n      )\n    }\n    if (key === '4') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='detsad'\n          color='#4a7aff'\n          selected={true}\n          handler={()=>{}}\n          value={'Детский сад в '+value}\n        />\n      )\n    }\n    if (key === '5') {\n      infoListInfrastructure.push(\n        <IconButton\n          key={key+i+'nfrs'}\n          iconName='hospital'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={'Больница в '+value}\n        />\n      )\n    }\n  }\n\n  if (safety) {\n    for (let i=0;i<safety.length;i++) {\n      const key = safety[i]\n      if (key === '1') {\n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='zabor'\n            color='#6aa3a5'\n            selected={true}\n            handler={()=>{}}\n            value='Поселок огорожен'\n          />\n        )\n      }\n      if (key === '2') {   \n        infoListSafety.push(\n          <IconButton\n            key={key+'sasc'}\n            iconName='security'\n            color='#ff5b5a'\n            selected={true}\n            handler={()=>{}}\n            value='Есть охрана'\n          />\n        )\n      }\n    }\n  }\n\n  for (let i=0;i<nn.length;i++) {\n    const key = nn[i]\n    const value = nature[key] || ''\n    if (key === '1') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='vodoem'\n          color='#5277f5'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '2') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#06b26b'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n    if (key === '3') {\n      infoListNature.push(\n        <IconButton\n          key={key+i+'ntr'}\n          iconName='tree'\n          color='#ffce01'\n          selected={true}\n          handler={()=>{}}\n          value={value}\n        />\n      )\n    }\n  }\n\n  let nearSettlementName = ''\n  let nearSettlementDist = ''\n  let nearTownName = ''\n  let nearTownDist = ''\n  let nearRailwayName = ''\n  let nearRailwayDist = ''\n  if (village.nearSettlement) {\n    nearSettlementName = village.nearSettlement.name\n    nearSettlementDist = village.nearSettlement.distance\n  }\n  if (village.nearTown) {\n    nearTownName = village.nearTown.name\n    nearTownDist = village.nearTown.distance\n  }\n  if (village.nearRailway) {\n    nearRailwayName = village.nearRailway.name\n    nearRailwayDist = village.nearRailway.distance\n  }\n\n  let rosreestrLink = ''\n  if (village.rosreestr) {\n    rosreestrLink = village.rosreestr \n  }\n\n  const slides = []\n\n  if (bgs){\n    for (let i=0;i<bgs.length;i++) {\n      slides.push(\n        <div\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n          }}\n        />\n      )\n    }\n  }\n\n  useEffect(()=>{\n    document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\n  },[])\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <>\n      <Dialog\n          open={showForm}\n          fullWidth={true}\n          maxWidth='sm'\n          // TransitionComponent={Transition}\n          onClose={() => {\n            setShowForm(false)\n          }}\n      >\n        <CallbackFormPopUp />\n      </Dialog>\n\n      <Container maxWidth='lg'>\n        <div className={classes.header}>\n          <Grid container alignItems='center'>\n            <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n          </Grid>\n          <Grid container alignItems='center'>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n              <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n              <h4 style={{padding:'10px 0'}}>{village.road} шоссе</h4>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n              <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container>\n          <Grid item xs={12} md={8}>\n            <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n              <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                {slides}\n              </Carousel>\n            </div>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <div className={classes.wrapperInfo}>\n              {infoList}\n              {console.log(infoList)}\n            </div>\n            <div style={{margin:'30px 15px'}}>\n              <center>\n\n\n                  <button onClick={()=> setShowForm(true)} className='main-button'>\n                    Записаться на просмотр\n                  </button>\n\n\n              </center>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.btns}>\n          <Grid container>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>setShowGenplan(true)}\n              >\n                Планировка поселка\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                onClick={()=>{window.open(rosreestrLink, '_blank')}}\n              >\n                Кадастровая карта\n              </button>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                 onClick={()=>setShowSendPlan(true)}\n               >\n                Отправить планировку на email\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <Grid container spacing={3}> \n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Дороги</h4>\n              {infoListRoad}\n            </div>\n          </Grid>\n          {infoListSafety.length < 1 ? '' :\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Безопасность</h4>\n              {infoListSafety}\n            </div>\n          </Grid>\n          }\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Природа</h4>\n              {infoListNature}\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <div className={classes.wrapperInfo}>\n              <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n              {infoListInfrastructure}\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div className={classes.descrBlock}>\n          <Grid container>\n            <Grid item xs={12}>\n              <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n            </Grid>\n            <Grid item xs={12} md={5}>\n              <div className={classes.descrImg} />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <div className={classes.descrSection}>\n                <span id={'description-page'}> </span>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n        <div className={classes.mapSection}>\n          <Grid container>\n            <MyMap\n              centerMap={infoCoords}\n            />\n            <Grid item xs={12} md={4}>\n              <div className={classes.mapInfo}>\n                <ItemMapInfo\n                  name='Ближайший населенный пункт'\n                  value={nearSettlementName + ' - ' + nearSettlementDist}\n                />        \n                <ItemMapInfo\n                  name='Ближайший город'\n                  value={nearTownName + ' - ' + nearTownDist}\n                />\n                <ItemMapInfo\n                  name='Ближайшая ж/д станция'\n                  value={nearRailwayName + ' - ' + nearRailwayDist}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    \n      <Container maxWidth='lg' style={{margin: '100px 0'}}>\n        <div className={classes.subInfo}>\n          <Grid container justifyContent='space-around'>\n            {waysToGetList}\n          </Grid>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg'>\n        <div id='target-block' className={classes.targetBlock}>\n          <TargetForm selectedVillage={village.name} />\n        </div>\n      </Container>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='xl'\n        open={showGenplan}\n        onClose={()=>setShowGenplan(false)}\n      >\n        <div className={classes.genplan} />\n      </Dialog>\n\n      <Dialog\n        fullWidth={true}\n        maxWidth='sm'\n        open={showSendPlan}\n        onClose={()=>setShowSendPlan(false)}\n      > \n        <CallbackPlanForm village={village.name}/>\n      </Dialog>\n    </>\n  )\n}\n","import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst SimilarVillages = ({uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\n  const newArr = []  \n\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        > \n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} >\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","import React from 'react'\nimport AppState from '../../AppState'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Page from '../../components/Page'\nimport SimilarVillages from '../../components/SimilarVillages'\n\nclass VillagePage extends React.Component {\n  static contextType = AppState\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  render() {\n    const path = this.props.location.pathname\n    const uname = path.substr(9)\n    let village = []\n\n    const villages = this.context.villages\n    for (let i=0;i<villages.length;i++) {\n      if (villages[i].uname === uname) {\n        village = villages[i]\n      }\n    }\n    this.context.selectedVillage = village.name\n\n    return (\n      <>\n        <Page village={village} />\n        <Container maxWidth='lg'\n          style={{\n            padding: '15px 0'\n          }}\n        >\n          {/*<h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>*/}\n          <Box m={2}>\n            <SimilarVillages uid={village.uid} road={village.road} price={village.price}/>\n          </Box>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default VillagePage\n"],"sourceRoot":""}